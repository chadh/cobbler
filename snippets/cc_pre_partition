#set $bootfstype = $getVar('$bootfstype', 'ext3')
#set $rootfstype = $getVar('$rootfstype', 'ext3')
#set $varfstype = $getVar('$varfstype', 'ext3')
#set $tmpfstype = $getVar('$tmpfstype', 'ext3')
#set $bootsize = $getVar('$bootsize', 1000)
#set $raidlevel = $getVar('$raidlevel', 'na')
##
#set $pvsize = $getVar('$pvsize', None)
#if $pvsize == None
#set $pvsizeopt = "--size=50000 --grow"
#else
#set $pvsizeopt = "--size=" + str($pvsize)
#end if
#set $rootvolsize = $getVar('$rootvolsize',15000)
#set $varvolsize = $getVar('$varvolsize',5000)
#set $tmpvolsize = $getVar('$tmpvolsize',2000)
#set $swapvolsize = $getVar('$swapvolsize', 2000)

#set $rawdisks = $getVar('$disks', None)
#if $rawdisks != None
#set $disks = $rawdisks.split(',')
#else
#set $disks = []
#end if

#set $count = $len($disks)

#if $count <= 1

#if $count == 0
#raw
DISK=$(awk '{ if ($NF ~ /(^[hs]d[a-z]|^x?vd[a-z])$/) print $NF; }'  /proc/partitions | head -n 1)
#end raw
#else
DISK=$disks[0]
#end if

#raw
## get disk size in GB
DISKSIZE=$(parted -sm /dev/$DISK unit GB print | grep -e "$DISK" | cut -d: -f2 | sed -e 's/GB$//')
## if [ -e /sys/firmware/efi -o $DISKSIZE -gt 2100 ]
if [ $DISKSIZE -gt 2100 ]
then
  ## bios boot partition necessary
  BIOSBOOT="part biosboot --fstype=biosboot --size=1 --ondisk=\$DISK"
fi
#end raw

cat <<EOF > /tmp/partinfo
\$BIOSBOOT
part /boot --fstype=$bootfstype --size=$bootsize --asprimary --ondisk=\$DISK
part pv.01 --asprimary $pvsizeopt --ondisk=\$DISK
#else if $count >= 2
#if $count == 2
#if $raidlevel == 'na'
#set $raidlevel = 1
#end if
#else if $count <= 6
#if $raidlevel == 'na'
#set $raidlevel = 5
#end if
#else
#if $raidlevel == 'na'
#set $raidlevel = 6
#end if
#end if

FIRSTDISK="$disks[0]"
#raw
## get disk size in GB
DISKSIZE=$(parted -sm /dev/$FIRSTDISK unit GB print | grep -e "$FIRSTDISK" | cut -d: -f2 | sed -e 's/GB$//')
if [ $DISKSIZE -gt 2100 ]
then
  ## bios boot partition necessary
  BIOSBOOT="part biosboot --fstype=biosboot --size=1 --ondisk="
else
  BIOSBOOT="# ignore this - "
fi
#end raw

#set $i = 0
cat <<EOF > /tmp/partinfo
#set $bootraidparts = ""
#set $sysraidparts = ""
#for $disk in $disks
\${BIOSBOOT}$disk
part raid.${i}1 --size=$bootsize --asprimary --ondisk=$disk
part raid.${i}2 $pvsizeopt --ondisk=$disk
#set $bootraidparts += "raid." + str($i) + "1 "
#set $sysraidparts += "raid." + str($i) + "2 "
#set $i += 1
#end for
raid /boot --fstype=$bootfstype --level=1 --device=md0 $bootraidparts
raid pv.01 --level=$raidlevel --device=md1 $sysraidparts
#end if
volgroup vg1 pv.01
logvol / --vgname=vg1 --size=$rootvolsize --name=root --fstype=$rootfstype
#if $varvolsize != '0'
logvol /var --vgname=vg1 --size=$varvolsize --name=var --fstype=$varfstype
#end if
#if $tmpvolsize != '0'
logvol /tmp --vgname=vg1 --size=$tmpvolsize --name=tmp --fstype=$tmpfstype
#end if
#if $swapvolsize != '0'
logvol swap --vgname=vg1 --size=$swapvolsize --name=swap
#end if
EOF
cat /tmp/partinfo

